version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:8.0
    container_name: dealdrop-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: strongpassword123
      MONGO_INITDB_DATABASE: dealdrop
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - dealdrop-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/dealdrop --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: dealdrop-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGO_URI: mongodb://admin:strongpassword123@mongodb:27017/dealdrop?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your_super_secret_jwt_key_min_32_characters_long}
      JWT_EXPIRES_IN: 7d
      ORIGIN: http://localhost
      RESEND_API_KEY: ${RESEND_API_KEY}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - dealdrop-network
    volumes:
      - ./server/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:4000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Frontend Web App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API: http://localhost:4000
        VITE_AUCTION_API: http://localhost:4000/auction
    container_name: dealdrop-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - dealdrop-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

# Persistent volumes
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

# Network configuration
networks:
  dealdrop-network:
    driver: bridge
